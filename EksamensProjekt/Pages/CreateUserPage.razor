@page "/CreateUserPage"
@using Core
@using EksamensProjekt.Service
@inject NavigationManager nav
@inject ILogin LoginService
@inject IUser mService

<h1>Opret bruger</h1>

@if (isLoading)
{
    <p>Indlæser...</p>
}
else if (string.IsNullOrEmpty(currentUser?.Role) || currentUser.Role != "Admin")
{
    <p>Adgang nægtet</p>
}
else
{
    <EditForm EditContext="@editContext" OnValidSubmit="@HandleSubmit" class="row p-3">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="col-md-12 mb-3">
            <label for="Name">Navn</label>
            <InputText id="Name" @bind-Value="user.Name" class="form-control" />
            <ValidationMessage For="@(() => user.Name)" />
        </div>

        <div class="col-md-12 mb-3">
            <label for="Username">Brugernavn</label>
            <InputText id="Username" @bind-Value="user.UserName" class="form-control" />
            <ValidationMessage For="@(() => user.UserName)" />
        </div>

        <div class="col-md-12 mb-3">
            <label for="Password">Adgangskode</label>
            <InputText id="Password" @bind-Value="user.Password" class="form-control" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <div class="col-md-12 mb-3">
            <label for="ProfilePicture">Profilbillede</label>
            <InputText id="ProfilePicture" @bind-Value="user.ProfilePicture" class="form-control" />
            <ValidationMessage For="@(() => user.ProfilePicture)" />
        </div>
        <div class="col-md-6 mb-3">
            <label for="Location">Lokation</label>
            <div class="location-input-group">
                <InputSelect id="Location" @bind-Value="user.Location" class="form-control">
                    <option value="">-- Vælg lokation --</option>
                    @foreach (var location in locations)
                    {
                        <option value="@location">@location</option>
                    }
                </InputSelect>
                <button type="button" class="btn-add-location" @onclick="ShowAddLocationDialog" title="Tilføj ny lokation">
                    <i class="bi bi-plus-circle"></i> +
                </button>
            </div>
            <ValidationMessage For="@(() => user.Location)" />
        </div>
        <div class="col-md-6 mb-3">
            <label for="Role">Rolle</label>
            <InputSelect id="Role" @bind-Value="user.Role" class="form-control">
                <option value="">-- Vælg en rolle --</option>
                @foreach (var role in roles)
                {
                    <option value="@role">@role</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => user.Role)" />
        </div>

        @if (user.Role == "Elev")
        {
            <div class="col-md-12 mb-3">
                <label for="StartTime">Start tidspunkt</label>
                <InputDate id="StartTime" @bind-Value="user.DateOfStart" class="form-control" />
                <ValidationMessage For="@(() => user.DateOfStart)" />
            </div>
            <div class="col-md-12 mb-3">
                <label for="EndTime">Slut tidspunkt</label>
                <InputDate id="EndTime" @bind-Value="user.DateOfEnd" class="form-control" />
                <ValidationMessage For="@(() => user.DateOfEnd)" />
            </div>
        }

        <div class="col-12 mb-3">
            <button type="submit" class="btn btn-primary">Opret Bruger</button>
        </div>

        <button type="button" class="btn btn-secondary" @onclick="NavigateAllStudentPage">Fortryd ændringer</button>
    </EditForm>
}

@* Modal for tilføjelse af ny lokation *@
@if (showAddLocationModal)
{
    <div class="custom-modal-backdrop">
        <div class="custom-modal">
            <div class="modal-header-custom">
                <h5 class="modal-title-custom">Tilføj ny lokation</h5>
                <button type="button" class="modal-close-btn" @onclick="CloseAddLocationDialog">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="modal-body-custom">
                <div class="form-group">
                    <label for="newLocation" class="modal-label">Lokationsnavn</label>
                    <input type="text" class="form-control modal-input" id="newLocation" @bind="newLocationName"
                           @onkeypress="@(async (e) => { if (e.Key == "Enter") await AddNewLocation(); })"
                           placeholder="Indtast ny lokation..." />
                    @if (!string.IsNullOrEmpty(locationErrorMessage))
                    {
                        <div class="error-message">
                            <i class="bi bi-exclamation-circle"></i> @locationErrorMessage
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer-custom">
                <button type="button" class="btn btn-secondary modal-btn" @onclick="CloseAddLocationDialog">Annuller</button>
                <button type="button" class="btn btn-primary modal-btn" @onclick="AddNewLocation" disabled="@string.IsNullOrWhiteSpace(newLocationName)">Tilføj</button>
            </div>
        </div>
    </div>
}

@code {
    private User user = new() { Role = "", };
    private string[] roles = { "Elev", "Køkkenchef", "Admin", "Kok" };
    private List<string> locations = new()
    {
        "Aarhus", "Borupgaard", "Bygholm Park", "Centralværkstedet", "Copenhagen Portside",
        "H.C. Andersen Odense", "Holte", "Hvide Hus Aalborg", "Kellers Park", "Klarskovgaard",
        "Kolding", "Kongebrogaarden", "Kongens Lyngby", "Køge Strand", "Middelfart",
        "Rebild Bakker", "Roskilde"
    };
    private EditContext editContext = default!;
    private User? currentUser;
    private bool isLoading = true;

    // Variabler til modal for ny lokation
    private bool showAddLocationModal = false;
    private string newLocationName = string.Empty;
    private string locationErrorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await LoginService.GetUserLoggedIn();
        if (currentUser?.Role == "Admin")
        {
            editContext = new EditContext(user);
        }
        isLoading = false;
    }

    private async Task HandleSubmit()
    {
        if (editContext.Validate())
        {
            await mService.AddUser(user);
            if (user.Role == "Elev")
            {
                nav.NavigateTo("/AllStudentsPage");

            }
            else
            {
                nav.NavigateTo("/EmployeePage");
            }

        }
        else
        {
            Console.WriteLine("Formularen er ikke valid.");
        }
    }

    private void NavigateAllStudentPage()
    {
        nav.NavigateTo("/AllStudentsPage");
    }

    // Metoder til håndtering af ny lokation
    private void ShowAddLocationDialog()
    {
        showAddLocationModal = true;
        newLocationName = string.Empty;
        locationErrorMessage = string.Empty;
    }

    private void CloseAddLocationDialog()
    {
        showAddLocationModal = false;
        newLocationName = string.Empty;
        locationErrorMessage = string.Empty;
    }

    private async Task AddNewLocation()
    {
        if (string.IsNullOrWhiteSpace(newLocationName))
        {
            locationErrorMessage = "Indtast venligst et lokationsnavn";
            return;
        }

        if (locations.Contains(newLocationName, StringComparer.OrdinalIgnoreCase))
        {
            locationErrorMessage = "Denne lokation eksisterer allerede";
            return;
        }

        // Tilføj den nye lokation til listen
        locations.Add(newLocationName);
        locations.Sort(); // Sorter listen alfabetisk

        // Vælg den nye lokation automatisk
        user.Location = newLocationName;

        // Luk modal
        CloseAddLocationDialog();

        // Her kunne du også gemme den nye lokation i databasen hvis nødvendigt
        // await LocationService.AddLocation(newLocationName);
    }
}