@page "/AllStudentsPage"
@using Core
@using EksamensProjekt.Service
@inject ILogin LoginService
@inject NavigationManager nav
@inject IUser mService

<h3>Oversigt over Elever</h3>
@foreach (var student in students)
{
    <div class="student-card" @onclick="@(() => nav.NavigateTo($"/StudentplanPage/{student.UserId}"))">
        <div class="student-info">
            <img src="https://media.istockphoto.com/id/1763926700/photo/portrait-of-smiling-smart-school-boy-wearing-braces-on-teeth-looking-at-camera-education.jpg?s=612x612&w=0&k=20&c=kDQg5b1no9fvjtsmdme9aB-oRd3xmXroT4577FL2pb4=" alt="">
            <h2>@student.Name</h2>
            <span>@student.Role </span>
            <span>Hotel:Aarhus</span>
            <span>@student.DateOfStart.Year</span>
        </div>
        <div class="student-progress">
            <div class="student-progress-bar">
            </div>
        </div>
    </div>
}


@code {
    private User? currentUser;

    private Student[]? students = new Student[0];

    protected override async Task OnInitializedAsync()
    {
        currentUser = await LoginService.GetUserLoggedIn();

        if (currentUser == null ||
            (currentUser.Role != "Admin" && currentUser.Role != "KÃ¸kkenchef"))
        {
            nav.NavigateTo("/");
            return;
        }

        await LoadAll();
    }

    private async Task DeleteById(User user)
    {
        await mService.DeleteById(user.UserId);
        await LoadAll();

    }

    private void AddUser()
    {
        nav.NavigateTo("CreateUserPage");
    }

    private async Task LoadAll()
    {
        // Henter alle brugere
        var allUsers = await mService.GetAll();

        // Her filtrer vi og tager kun alle students
        students = allUsers.OfType<Student>()
            .Where(e => e.Role == "Elev")
            .ToArray();
    }

}
