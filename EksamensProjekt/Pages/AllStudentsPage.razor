@page "/AllStudentsPage"
@using Core
@using EksamensProjekt.Service
@inject ILogin LoginService
@inject NavigationManager nav
@inject IUser mService

<h3>OVERSIGT OVER ELEVER</h3>
@foreach (var user in users)
{
    <div class="student-card" @onclick="@(() => nav.NavigateTo($"/StudentplanPage/{user.UserId}"))">
        <div class="student-info">
            <img src=@user.ProfilePicture alt="">
            <h2>@user.Name</h2>
            <span>Rolle: @user.Role </span>
            <span>Lokation: @user.Location</span>
            <span>Årgang: @user.DateOfStart.Year</span>
        </div>
        <div class="student-progress">
            <div class="student-progress-bar">
            </div>
        </div>
    </div>
}


@code {
    private User? currentUser;

    private User[]? users = new User[0];

    protected override async Task OnInitializedAsync()
    {
        currentUser = await LoginService.GetUserLoggedIn();

        if (currentUser == null ||
            (currentUser.Role != "Admin" && currentUser.Role != "Køkkenchef" && currentUser.Role != "Kok"))
        {
            nav.NavigateTo("/");
            return;
        }

        await LoadAll();
    }
    
    private async Task LoadAll()
    {
        // Henter alle brugere
        var allUsers = await mService.GetAll();

        // Her filtrer vi og tager kun alle elever
        users = allUsers
            .Where(e => e.Role == "Elev")
            .ToArray();
    }

}
