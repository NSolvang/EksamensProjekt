@page "/StudentplanPage/{userId:int}"
@using Core
@using EksamensProjekt.Service
@using EksamensProjekt.Components
@inject ILogin LoginService
@inject NavigationManager nav
@inject IUser mService
@inject IGoal mServiceGoal

<h3>Elevplan</h3>

@if (users == null)
{
    <p>Bruger ikke fundet.</p>
}
else if (users.Studentplan == null)
{
    <p>Ingen elevplan for @users.Name.</p>
}
else
{
        <StudentplanHeaderComponent user="users" CurrentUser="currentUser" />
        
        <div class="internship-period-buttons">
            <button>Praktikperiode 1</button>
            <button>Praktikperiode 2</button>
            <button>Praktikperiode 3</button>
            <button>Afslutning</button>
        </div>
        
        <div class="Student-plan-container">
            @foreach (var goal in goals)
            {
                <button @onclick="() => ToggleTable(goal.GoalId)">
                    @goal.Name
                </button>

                @if (expandedGoalId == goal.GoalId)
                {
                    <div class="dropdown-table">
                        <table class="table">
                            <thead>
                            <tr>
                                <th>Opgave</th>
                                <th>Dato</th>
                                <th>Ansvarlig</th>
                                <th>Bør Gennemføres i Perioden</th>
                                <th>Gennemført Status</th>
                                <th>Noter</th>
                                <th>Status</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var subgoal in goal.Subgoals)
                            {
                                <tr>
                                    <td>@subgoal.Name</td>
                                    <td>@subgoal.Date.ToShortDateString()</td>
                                    <td>@subgoal.Responsible</td>
                                    <td>Inden d. @subgoal.Deadline</td>
                                    <td>
                                        <select @bind="subgoal.Status" class="form-control select-status @GetStatusClass(subgoal.Status)">
                                            <option value="Mangler">Mangler</option>
                                            <option value="Igang">Igang</option>
                                            <option value="Gennemført">Gennemført</option>
                                        </select>
                                    </td>
                                    <td>
                                        <InputText @bind-Value="subgoal.Comments" />
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                }
            }
        </div>
}

@code {
    [Parameter]
    public int userId { get; set; }

    private User? users;
    private User? currentUser;

    private Goal[]? goals;
    
    // Tilstand for dropdown-tabellen
    private int? expandedGoalId;
    
    
    protected override async Task OnInitializedAsync()
    {
        currentUser = await LoginService.GetUserLoggedIn();

        if (currentUser == null)
        {
            nav.NavigateTo("/");
            return;
        }

        if (currentUser.Role == "Elev" && currentUser.UserId != userId)
        {
            nav.NavigateTo("/");
            return;
        }

        users = await mService.GetUserById(userId);
        goals = users?.Studentplan?.Goal?.ToArray();
    }
    
    private async Task DeleteById(User user)
    {
        await mService.DeleteById(user.UserId);
        nav.NavigateTo("/AllStudentsPage");
    }
    
    private void ToggleTable(int goalId)
    {
        if (expandedGoalId == goalId)
            expandedGoalId = null; 
        else
            expandedGoalId = goalId; 
    }
    
    //Koden til dropdown menu
    private string task1Status = "Mangler"; // Default status for task 1
    private string task2Status = "Mangler"; // Default status for task 2
    
    private string GetStatusClass(string status)
    {
        return status switch
        {
            "Mangler" => "status-Mangler",
            "Igang" => "status-Igang",
            "Gennemført" => "status-Gennemført",
            _ => ""
        };
    }
    
}