@page "/StudentplanPage/{userId:int}"
@using Core
@using EksamensProjekt.Service
@inject ILogin LoginService
@inject NavigationManager nav
@inject IUser mService

<h3>Elevplan</h3>

@if (users == null)
{
    <p>Bruger ikke fundet.</p>
}
else if (users.Studentplan == null)
{
    <p>Ingen elevplan for @users.Name.</p>
}
else
{
    <div class="profile-container">
        <div class="profile-header">
            <img src="@users.ProfilePicture" class="profile-image" />
            <div class="profile-info">
                <h3>@users.Name's Profil</h3>
                <h4 class="role">@users.Role</h4>
                <h4>@users.DateOfStart.Year</h4>
            </div>
            
            @if (currentUser?.Role == "Admin")
            {
                <td><button class="btn-primary" @onclick="() => DeleteById(users)">Fjern bruger</button></td>
            }
        </div>
        
        <div class="internship-period-buttons">
            <button>Praktikperiode 1</button>
            <button>Praktikperiode 2</button>
            <button>Praktikperiode 3</button>
            <button>Afslutning</button>
        </div>
        
        <div class="Student-plan-container">
            <button @onclick='() => ToggleTable("beforeFirstDay")'>Inden Første Dag</button>

            @if (showBeforeFirstDayTable)
            {
                <div class="dropdown-table">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Opgave</th>
                            <th>Dato</th>
                            <th>Ansvarlig</th>
                            <th>Bør Gennemføres i Perioden</th>
                            <th>Gennemført Status</th>
                            <th>Noter</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td>Bestil uniform</td>
                            <td>@contractDate.ToShortDateString()</td>
                            <td>Elevansvarlig</td>
                            <td>Inden første arbejdsdag</td>
                            <td>
                                <select @bind="task1Status" class="form-control select-status @GetStatusClass(task1Status)">
                                    <option value="Mangler">Mangler</option>
                                    <option value="Igang">Igang</option>
                                    <option value="Gennemført">Gennemført</option>
                                </select>
                            </td>
                            <td><input type="text" @bind="contractNotes" class="form-control" /></td>
                        </tr>
                        <tr>
                            <td>Informer om forplejning</td>
                            <td>@contractDate.ToShortDateString()</td>
                            <td>Elevansvarlig / Nærmeste leder</td>
                            <td>Inden første arbejdsdag</td>
                            <td>
                                <select @bind="task2Status" class="form-control select-status @GetStatusClass(task2Status)">
                                    <option value="Mangler">Mangler</option>
                                    <option value="Igang">Igang</option>
                                    <option value="Gennemført">Gennemført</option>
                                </select>
                            </td>
                            <td><input type="text" @bind="contractNotes" class="form-control" /></td>
                        </tr>
                        <!-- Flere rækker efter behov -->
                        </tbody>
                    </table>
                </div>
            }
            
            <button>Velkommen til & Introduktion Til Kollegaer</button>
            <button>Information - Generel Fra Din Nærmeste Leder</button>
            <button>Sikkerhed & Arbejdsmiljø</button>
            <button>Samtaler Undervejs i Min Første Praktikperiode</button>
            <button>Kurser - Interne mv</button>
            <button>Madspild & Affaldssortering</button>
            <button>Faglige mål</button>
            <button>Evaluering</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int userId { get; set; }

    private User? users;
    private User? currentUser;
    
    // Tilstand for dropdown-tabellen
    private bool showBeforeFirstDayTable = false;
    
    // Eksempel på datafelter
    private bool isContractSigned = false;
    private DateTime contractDate = DateTime.Now;
    private string contractNotes = "";
    
    private bool isWelcomePackReceived = false;
    private DateTime welcomePackDate = DateTime.Now;
    private string welcomePackNotes = "";


    protected override async Task OnInitializedAsync()
    {
        currentUser = await LoginService.GetUserLoggedIn();

        if (currentUser == null)
        {
            nav.NavigateTo("/");
            return;
        }

        if (currentUser.Role == "Elev" && currentUser.UserId != userId)
        {
            nav.NavigateTo("/");
            return;
        }

        users = await mService.GetUserById(userId);
    }
    
    private async Task DeleteById(User user)
    {
        await mService.DeleteById(user.UserId);
        nav.NavigateTo("/AllStudentsPage");
    }
    
    private void ToggleTable(string tableName)
    {
        if (tableName == "beforeFirstDay")
        {
            showBeforeFirstDayTable = !showBeforeFirstDayTable;
        }
        // Tilføj flere conditions for andre tabeller hvis nødvendigt
    }
    //Koden til dropdown menu
    private string task1Status = "Mangler"; // Default status for task 1
    private string task2Status = "Mangler"; // Default status for task 2
    
    private string GetStatusClass(string status)
    {
        return status switch
        {
            "Mangler" => "status-Mangler",
            "Igang" => "status-Igang",
            "Gennemført" => "status-Gennemført",
            _ => ""
        };
    }


}