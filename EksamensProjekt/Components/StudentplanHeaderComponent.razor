@using Core
@using EksamensProjekt.Service
@inject NavigationManager nav
@inject IUser mService

<div class="profile-header">
    <img src="@user.ProfilePicture" class="profile-image" />
    <div class="profile-info">
        <h3>@user.Name's Profil</h3>
        <h4 class="role">@user.Role</h4>
        <h4>Praktikperiode: @user.Internshipyear</h4>
    </div>
    <StatusBarComponent UserName="@user.Name" Goals="@GetUserGoals(user)" />
    @if (CurrentUser.Role == "Admin")
    {
        <button class="btn-primary" @onclick="() => DeleteById(user)">Fjern bruger</button>
    }
  
</div>

@code {
    [Parameter] public User user { get; set; } = default!;
    [Parameter] public User CurrentUser { get; set; } = default!;
    [Parameter] public Goal[] Goals { get; set; } = Array.Empty<Goal>(); // Ã†ndret fra User til Goal[]

    private async Task DeleteById(User user)
    {
        await mService.DeleteById(user.UserId);
        nav.NavigateTo("/AllStudentsPage");
    }
    
    private Goal[] GetUserGoals(User user)
    {
        return user.Studentplan?.Goal?.ToArray() ?? Array.Empty<Goal>();
    }
}